#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


/ {
  behaviors {
    bspc_lt1_holdpref_quick: bspc_lt1_holdpref_quick {
      compatible = "zmk,behavior-hold-tap";
      label = "BSPC_LT1_HOLDPREF_QUICK";
      #binding-cells = <0>;

      /* finjustera efter känsla */
      tapping-term-ms = <200>;   /* gräns för tap vs hold */
      quick-tap-ms     = <200>;  /* dubbeltrycks-fönster */
      retro-tap        = <true>; /* gör andra trycket till tap direkt */
      flavor           = "hold-preferred";

      /* hold = layer 1, tap = backspace */
      bindings = <&mo 1>, <&kp BSPC>;
    };
  };

  combos {
    compatible = "zmk,combos";

    combo_esc {
      timeout-ms = <50>;
      key-positions = <0 1>;
      bindings = <&kp ESC>;
    };

    combo_ret_i_oe {
      timeout-ms = <50>;
      key-positions = <2 3>;
      bindings = <&kp SCLN>;   // 'ö' på svensk layout
    };

    combo_right_shift {
      timeout-ms = <50>;
      key-positions = <15 16>;
      bindings = <&kp RSFT>;   // höger shift
    };
    combo_tick {
      timeout-ms = <50>;
      key-positions = <8 19>;
      bindings = <&kp BSLH>;  
    };
  };
        



  keymap {
    compatible = "zmk,keymap";
    default_layer {
      display-name = "Default Layer";
      // -----------------------------------------------------------------------------------------
      // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
      // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
      // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
      //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
      bindings = <
         &kp TAB   &kp Q &kp W &kp F &kp P &kp B   &kp J &kp L  &kp U     &kp Y   &kp O    &kp BSPC
         &kp LCTRL &kp A &kp R &kp S &kp T &kp G   &kp M &kp N  &kp E     &kp I   &kp O    &kp SQT
         &kp LSHFT &kp Z &kp X &kp C &kp D &kp V   &kp K &kp H  &kp COMMA &kp DOT &kp FSLH &kp ESC
                     &kp LGUI &&bspc_lt1_holdpref_quickC &kp SPACE   &kp RET &kp SPACE &kp RALT
                     /* &kp LGUI &lt 1 BSPC &kp SPACE   &kp RET &kp SPACE &kp RALT */
                      /* &kp LGUI &none &kp SPACE   &kp RET &none &kp RALT */
      >;
    };
    layer_two {
      display-name = "Layer two";
      // -----------------------------------------------------------------------------------------
      // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
      // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
      // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
      //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
      bindings = <
         &kp TAB   &kp Q &kp W &kp F &kp P &kp B   &kp J &kp N7  &kp N8  &kp N9  &kp O    &kp BSPC
         &kp LCTRL &kp A &kp R &kp S &kp T &kp G   &kp M &kp N4  &kp N5  &kp N6  &kp O    &kp SQT
         &kp LSHFT &kp Z &kp X &kp C &kp D &kp V   &kp K &kp N1  &kp N2  &kp N3  &kp FSLH &kp ESC
                     &kp LGUI &kp BSPC &kp SPACE   &kp RET &kp SPACE &kp N0
                      /* &kp LGUI &none &kp SPACE   &kp RET &none &kp RALT */
      >;
    };

  };
};




/*    // Copyright (c) 2022 The ZMK Contributors */
/* // SPDX-License-Identifier: MIT */
/**/
/* #include <behaviors.dtsi> */
/* #include <dt-bindings/zmk/keys.h> */
/* #include <dt-bindings/zmk/bt.h> */
/* // #include <symbols.dtsi> */
/* #include "keys_sv.h" */
/**/
/* // Home row mods macro */
/* #define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4 */
/* #define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4 */
/**/
/* &lt { */
/*     tapping-term-ms = <150>; */
/* }; */
/**/
/* / { */
/*     behaviors { */
/*         ht: hold_tap { */
/*             compatible = "zmk,behavior-hold-tap"; */
/*             #binding-cells = <2>; */
/*             flavor = "tap-preferred"; */
/*             tapping-term-ms = <220>; */
/*             quick-tap-ms = <150>; */
/*             require-prior-idle-ms = <100>; */
/*             bindings = <&kp>, <&kp>; */
/*         }; */
/*     }; */
/**/
/*     combos { */
/*         compatible = "zmk,combos"; */
/*         combo_esc { */
/*             timeout-ms = <50>; */
/*             key-positions = <10 11>; */
/*             bindings = <&kp ESC>; */
/*         }; */
/*         combo_tab { */
/*             timeout-ms = <50>; */
/*             key-positions = <0 1>; */
/*             bindings = <&kp TAB>; */
/*         }; */
/*         combo_sticky_shift { */
/*             timeout-ms = <50>; */
/*             key-positions = <20 21>; */
/*             bindings = <&sk LSHFT>; */
/*         }; */
/*     }; */
/**/
/**/
/*     keymap { */
/*         compatible = "zmk,keymap"; */
/*         default_layer { */
/*             bindings = < */
/*         //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮ */
/*         //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │ */
/*             &kp SV_SEMI  &kp COMMA      &kp DOT      &kp P      &kp Y          &kp F      &kp G      &kp C      &kp R      &kp L */
/*         //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤ */
/*         //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │ ' "      │ */
/*             &kp A     &kp O    &kp E      &kp U      &kp I          &kp D      &kp H    &kp T      &kp N      &kp S */
/*         //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤ */
/*         //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │ , <      │ . >      │ / ?      │ */
/*             &kp BSLH      &kp Q      &kp J      &kp K      &kp X          &kp B      &kp M      &kp W  &kp V    &kp Z */
/*         //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯ */
/*                                             &lt 1 SPACE   &kp LGUI     &kp ENTER  &lt 2 BSPC */
/*         //                                  ╰──────────┴──────────╯   ╰──────────┴──────────╯ */
/*             >; */
/*         }; */
/**/
/*         right_layer { */
/*             bindings = < */
/*         //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮ */
/*         //│ INSERT   │  1       │  2       │  3       │          │   │ HOME     │ PAGE DN  │ PAGE UP  │ END      │  :       │ */
/*             &kp N1    &kp N2     &kp N3     &kp N4     &kp N5         &kp N6   &kp N7  &kp N8  &kp N9    &kp N0 */
/*         //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤ */
/*         //│ DELETE   │  4       │  5       │  6       │          │   │ LEFT     │ DOWN     │ UP       │ RIGHT    │  ;       │ */
/*            &kp SV_EXCL &kp SV_LBKT &kp SV_LBRC &kp SV_LPAR &kp SV_AMPS  &kp SV_EQUAL   &kp SV_RPAR   &kp SV_RBRC   &kp SV_RBKT   &kp SV_AT */
/*         //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤ */
/*         //│ CAPS     │  7       │  8       │  9       │  0       │   │          │          │          │          │          │ */
/*            &kp SV_DQT &kp SV_MINUS &kp SV_PLUS &kp SV_ASTERISK &kp SV_CARET &kp SV_PRCNT &kp SV_DOLLAR &kp SV_HASH &kp SV_PIPE &kp SV_TILDE */
/*         //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯ */
/*                                              &none     &kp ESC        &none     &kp DELETE */
/*         //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯ */
/*             >; */
/*         }; */
/**/
/*         left_layer { */
/*             bindings = < */
/*         //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮ */
/*         //│          │  [       │  {       │  }       │          │   │  ^       │  (       │  )       │  ]       │  ~       │ */
/*             &kp SV_COLON     &kp SV_SEMI   &kp SV_LT   &kp SV_GT   &none         &none  &none   &kp LC(C)   &none   &none */
/*         //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤ */
/*         //│  !       │  @       │  #       │  $       │  %       │   │  *       │  -       │  =       │  \       │  `       │ */
/*             &kp SV_A_RING &kp SV_O_UMLAUT &kp SV_QMARK &kp SV_SLASH &kp SV_CARET &none &kp LEFT &kp DOWN &kp UP  &kp RIGHT */
/*         //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤ */
/*         //│          │          │          │          │          │   │  &       │  _       │  +       │  │       │          │ */
/*             &kp SV_A_UMLAUT &kp LC(O) &kp LC(R) &kp SV_BACKSLASH     &kp SV_CARET &none &none &none &none &kp SV_UNDERSCORE */
/*         //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯ */
/*                                              &mo 3     &none         &none     &none */
/*         //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯ */
/*             >; */
/*         }; */
/**/
/*         reset_layer { */
/*             bindings = < */
/*         //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮ */
/*         //│          │  [       │  {       │  }       │          │   │  ^       │  (       │  )       │  ]       │  ~       │ */
/*             &bootloader     &none   &none   &none   &none         &none  &none   &none   &none   &none */
/*         //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤ */
/*         //│  !       │  @       │  #       │  $       │  %       │   │  *       │  -       │  =       │  \       │  `       │ */
/*             &none &none &none &none &none &none &none &none &none  &none */
/*         //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤ */
/*         //│          │          │          │          │          │   │  &       │  _       │  +       │  │       │          │ */
/*             &none &none &none &none     &none &none &none &none &none &none */
/*         //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯ */
/*                                              &none     &none         &none     &none */
/*         //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯ */
/*             >; */
/*         }; */
/*     }; */
/* };  */
