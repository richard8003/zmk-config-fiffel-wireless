#include <behaviors.dtsi>
#include <dt-bindings/zmk/modifiers.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keypos.dtsi"

/* ---------- BEHAVIOR OVERRIDE (TOP-LEVEL, not inside /{ }) ---------- */
// Den här gör att jag kan hålla inne en knapp för upprepning även om jag har en modifier på samma knapp
// exempel backspace som även är layer 1


&lt {
  flavor = "tap-preferred";
  tapping-term-ms = <175>;   // ↓ faster tap recognition
  quick-tap-ms    = <50>;
  retro-tap;
};

/ {

  combos {
    #include "combo_strings.dtsi"
    compatible = "zmk,combos";

    /* combo_ctrl_tab { */
    /*   timeout-ms = <50>; */
    /*   key-positions = <POS_F POS_T>; */
    /*   bindings = <&kp LC(TAB)>; */
    /* }; */
    /* combo_ctrl_shift_tab { */
    /*   timeout-ms = <50>; */
    /*   key-positions = <POS_W POS_F>;  // chord Q + P */
    /*   bindings = <&kp LC(LS((TAB))>; */
    /* }; */
    /* combo_delete_line { */
    /*   timeout-ms = <50>; */
    /*   key-positions = <10 11>;  // chord Q + P */
    /*   bindings = <&kp LA(BSPC)>; */
    /* }; */
    /* combo_delete_word_back  { */
    /*   timeout-ms = <50>; */
    /*   key-positions = <POS_R POS_S POS_T>;  // chord Q + P */
    /*   bindings = <&kp LSFT(LA(BSPC))>; */
    /* }; */
    /* combo_jump_one_word_back { */
    /*   timeout-ms = <50>; */
    /*   key-positions = <POS_X POS_C>;  // chord Q + P */
    /*   bindings = <&kp LA(LEFT) >; */
    /* }; */
    /* combo_jump_one_word_forward  { */
    /*   timeout-ms = <50>; */
    /*   key-positions = <POS_COM POS_DOT>;  // chord Q + P */
    /*   bindings = <&kp LA(RIGHT) >; */
    /* }; */
    /* combo_select_all  { */
    /*   timeout-ms = <50>; */
    /*   key-positions = <POS_W POS_F POS_P>;  // chord Q + P */
    /*   bindings = <&kp Lgui(A) >; */
    /* }; */

    /* combo_poweroff { */
    /*   timeout-ms = <50>; */
    /*   key-positions = <POS_Q POS_Z>;  // chord Q + P */
    /*   bindings = <&soft_off>; */
    /* }; */

    combo_copy {
      timeout-ms = <50>;
      key-positions = <POS_T POS_G>;
      bindings = <&kp LG(C)>;
    };

    combo_cut {
      timeout-ms = <50>;
      key-positions = <POS_P POS_B>;
      bindings = <&kp LG(X)>;
    };

    combo_paste {
      timeout-ms = <50>;
      key-positions = <POS_D POS_V>;
      bindings = <&kp LG(V)>;
    };

    combo_esc {
      timeout-ms = <50>;
      key-positions = <POS_E POS_I>;
      bindings = <&kp ESC>;
    };
            
    combo_alt {
      timeout-ms = <50>;
      key-positions = <14 15>;
      bindings = <&kp LALT>;
    };
            
    combo_left_shift {
      timeout-ms = <50>;
      key-positions = <15 16>;
      bindings = <&kp RSFT>;   // höger shift
    };

    combo_right_shift {
      timeout-ms = <50>;
      key-positions = <19 20>;
      bindings = <&kp RSFT>;   // höger shift
    };

    combo_single_quote {
      timeout-ms = <50>;
      key-positions = <8 19>;
      bindings = <&kp BSLH>;  
    };

    combo_double_quote {
      timeout-ms = <50>;
      key-positions = <7 18>;
      bindings = <&kp LS(N2)>;  
    };

    combo_double_hyphen {
      timeout-ms = <50>;
      key-positions = <POS_T POS_SLSH>;
      bindings = <&kp FSLH>;  
    };


    combo_double_lower_hyphen {
      timeout-ms = <50>;
      key-positions = <POS_N POS_D>;
      bindings = <&kp LS(FSLH)>;  
    };

    combo_question_mark {
      timeout-ms = <50>;
      key-positions = <8 9>;
      bindings = <&kp LS(MINUS)>;  
    };

    combo_bang {
      timeout-ms = <50>;
      key-positions = <1 2>;
      bindings = <&kp LS(N1)>;  
    };

    combo_opening_bracket {
        timeout-ms = <50>;
        key-positions = <16 19>; 
        bindings = <&kp LA(N8)>; // LALT(KC_8)
    };

    combo_closing_bracket {
        timeout-ms = <50>;
        key-positions = <16 20>;   
        bindings = <&kp LA(N9)>; // LALT(KC_9)
    };

    combo_opening_parent {
        timeout-ms = <50>;
        key-positions = <16 7>;   
        bindings = <&kp LS(N8)>; // LSFT(KC_8)
    };

    combo_closing_parent {
        timeout-ms = <50>;
        key-positions = <16 8>;   
        bindings = <&kp LS(N9)>; // LSFT(KC_9)
    };

    combo_opening_curly {
        timeout-ms = <50>;
        key-positions = <16 31>;   
        bindings = <&kp LA(LS(N8))>; // RSA(KC_8) → Right Alt (AltGr) + 8
    };

    combo_closing_curly {
        timeout-ms = <50>;
        key-positions = <16 32>;   
        bindings = <&kp LA(LS(N9))>; // RSA(KC_9) → Right Alt (AltGr) + 9
    };

    combo_ret_i_ao {
      timeout-ms = <50>;
      key-positions = <40 8>;
      bindings = <&kp LBKT>;   // 'ö' på svensk layout
    };

    combo_ret_i_ae {
      timeout-ms = <50>;
      key-positions = <40 20>;
      bindings = <&kp SQT>;   // 'ö' på svensk layout
    };

    combo_ret_i_oe {
      timeout-ms = <50>;
      key-positions = <40 21>;
      bindings = <&kp SCLN>;   // 'ö' på svensk layout
    };
  };


  keymap {
    compatible = "zmk,keymap";
    default_layer {
      display-name = "Default Layer";
      bindings = <
                
/*    ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮        ╭─────────────┬──────────┬──────────┬──────────┬──────────┬──────────╮ */
/*    │          │          │          │          │          │          │        │             │          │          │          │          │          │ */
       &kp A      &kp Q      &kp W      &kp F      &kp P      &kp B               &kp J         &kp L      &kp U      &kp Y      &kp O      &kp BSPC
/*    ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤        ├─────────────┼──────────┼──────────┼──────────┼──────────┼──────────┤ */
/*    │          │          │          │          │          │          │        │             │          │          │          │          │          │ */
       &kp LCTRL  &kp A      &kp R      &kp S      &kp T      &kp G               &kp M         &kp N      &kp E      &kp I      &kp O      &kp SQT
/*    ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤        ├─────────────┼──────────┼──────────┼──────────┼──────────┼──────────┤ */
/*    │          │          │          │          │          │          │        │             │          │          │          │          │          │ */
       &kp LSHFT  &kp Z      &kp X      &kp C      &kp D      &kp V               &kp K         &kp H      &kp COMMA  &kp DOT    &kp FSLH   &kp ESC
/*    ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤        ├─────────────┼──────────┼──────────┼──────────┴──────────┴──────────╯ */
/*                                     │          │          │          │        │             │          │          │                                  */
                                        &mt LALT ESC   &lt 1 BSPC &mt LGUI TAB    &mt RCTRL RET &lt 1 SPACE &kp RALT
/*                                     ╰──────────┴──────────┴──────────╯        ╰─────────────┴──────────┴──────────╯ */

      >;
    };
    layer_two {
      display-name = "Layer two";
      bindings = <

/*    ╭──────────┬───────────┬──────────┬───────────┬───────────────┬─────────────╮   ╭─────────────┬──────────┬──────────┬──────────┬────────────┬─────────────╮ */
/*    │          │           │          │           │               │             │   │             │          │          │          │            │             │ */
       &none      &kp LA(N7)  &kp RA(N2) &kp LS(N6)  &kp LA(LS(N7))  &kp RA(RBKT)      &kp KP_PLUS   &kp N7     &kp N8     &kp N9     &kp LG(FSLH) &kp LG(MINUS)
/*    ├──────────┼───────── ─┼──────────┼───────── ─┼─────     ─────┼─────   ─────┤   ├─────────────┼──────────┼──────────┼──────────┼────────────┼─────────────┤ */
/*    │          │           │          │           │               │             │   │             │          │          │          │            │             │ */
       &none      &kp A       &kp R      &kp S       &kp T           &kp G             &kp LS(N0)    &kp N4     &kp N5     &kp N6     &kp O        &none
/*    ├──────────┼───────────┼──────────┼───────────┼───────────────┼─────────────┤   ├─────────────┼──────────┼──────────┼──────────┼────────────┼─────────────┤ */
/*    │          │           │          │           │               │             │   │             │          │          │          │            │             │ */
       &none      &kp Z       &kp X      &kp C       &kp D           &kp V             &kp PIPE      &kp N1     &kp N2     &kp N3     &kp FSLH     &none
/*    ╰──────────┴───────────┴──────────┼───────────┼───────────────┼─────────────┤   ├─────────────┼──────────┼──────────┼──────────┴────────────┴─────────────╯ */
/*                                      │           │               │             │   │             │          │          │                                  */
                                         &none       &kp LEFT        &kp RIGHT         &kp DOWN      &kp UP     &kp N0
/*                                      ╰───────────┴───────────────┴─────────────╯   ╰─────────────┴──────────┴──────────╯ */
            

      >;
    };
    layer_three {
      display-name = "Layer three";
      bindings = <

/*    ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮ */
/*    │          │          │          │          │          │          │   │          │          │          │          │          │          │ */
       &kp TAB    &kp Q      &kp W      &kp F      &kp P      &kp B          &kp J      &kp N7     &kp N8     &kp N9     &kp O      &kp BSPC
/*    ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤ */
/*    │          │          │          │          │          │          │   │          │          │          │          │          │          │ */
       &kp LCTRL  &kp A      &kp R      &kp S      &kp T      &kp G          &kp M      &kp N4     &kp N5     &kp N6     &kp O      &kp SQT
/*    ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤ */
/*    │          │          │          │          │          │          │   │          │          │          │          │          │          │ */
       &kp LSHFT  &kp Z      &kp X      &kp C      &kp D      &kp V          &kp K      &kp N1     &kp N2     &kp N3     &kp FSLH   &kp ESC
/*    ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┴──────────┴──────────╯ */
/*                                     │          │          │          │   │          │          │          │                                  */
                                        &kp LGUI   &kp BSPC   &kp SPACE      &kp RET    &kp SPACE  &kp A 
/*                                     ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯ */

      >;
    };

  };
};

